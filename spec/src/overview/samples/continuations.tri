func isAllowed word = word == yield 'getAllowed

proc allowOne!(word, body) {
    return with body!()
        when 'getAllowed resume word
        else yield
}

proc allowAlso!(word, body) {
    return with body!()
        when 'getAllowed invert {
            cancel resume word or resume yield 'getAllowed
        }
        else yield
}

proc allowMany!(words, body) {
    return with body!()
        when 'getAllowed invert (any (resume) words)
        else yield
}

proc main!() {
    let line = readline!()
    let allowed1 = allowOne!("cat", do() isAllowed line))
    let allowed2 = allowOne!("cat", do() {
        return allowAlso!("cactus", do() isAllowed line)
    })
    let allowed3 = allowMany!(
        ["cat", "cactus", "cash"],
        do() isAllowed line,
    )
    println!("results: ${allowed1}; ${allowed2}; ${allowed3}")
}
