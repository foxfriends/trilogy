module native at "trilogy:regex/native"

const regex = native::regex
export regex

test "regex constructs a native regular expression from a string" {
    regex "h[eu]llo"
}

test "is_match returns true when the string matches, and false otherwise" {
    let pat = regex "h[eu]llo"
    assert pat::is_match "hello"
    assert pat::is_match "hullo"
    assert !(pat::is_match "hallo")
}

test "matches returns the captured matches in a record" {
    let pat = regex "h(?<v>[eu])(llo)"
    let rec = pat::matches "hello"
    assert rec == {|
        0 => "hello",
        1 => "e",
        "v" => "e",
        2 => "llo",
    |}
}
