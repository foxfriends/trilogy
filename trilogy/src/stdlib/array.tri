func map f [] = []
func map f [x, ..xs] = [f x, ..map f xs]
export map

test "map works" {
    assert map (fn x. x * 2) [1, 2, 3] == [2, 4, 6]
}

test "map works on empty arrays" {
    assert map (fn x. end) [] == []
}

test not "map accepts a closure" {
    map (do(n) { return 2 * n }) [1, 2, 3]
}

func filter f [] = []
func filter f [x, ..xs] = if f x then [x, ..filter f xs] else filter f xs
export filter

func fold f a [] = a
func fold f a [x, ..xs] =
    let a2 = f a x,
    fold f a2 xs
export fold
