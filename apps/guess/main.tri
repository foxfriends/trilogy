module io at "trilogy:io"
module num at "trilogy:num"
module str at "trilogy:str"

proc play!() {
    let answer = 42
    while true {
        io::print!("Guess: ")
        let guess = with io::readline!() |> str::chomp |> num::cast
            when 'NAN invert {
                io::println!("That's not a valid number")
                continue
            }
            else yield
        if guess == answer {
            io::println!("Congratulations, that's right!")
            break
        } else if guess < answer {
            io::println!("Wrong, too low.")
        } else {
            io::println!("Wrong, too high.")
        }
    }
}

proc main!() {
    with { play!() }
        when 'EOF cancel io::println!("Give up? Too bad.")
        else invert { exit 1 }
}
