test "passes if the pattern is an element of the iterator" {
    assert is 1 in [0, 1, 2]
}

test "fails if the pattern is not an element of the iterator" {
    assert !(is 3 in [0, 1, 2])
}

test "works on sets" {
    let els = [x for x in [|0, 1, 2|]]
    assert is 0 in els
    assert is 1 in els
    assert is 2 in els
}

test "works on records" {
    let els = [k:v for k:v in {| 0 => 'a, 1 => 'b, 2 => 'c|}]
    assert is 0:'a in els
    assert is 1:'b in els
    assert is 2:'c in els
}

test "works on arrays" {
    let els = [x for x in [0, 1, 2]]
    assert is 0 in els
    assert is 1 in els
    assert is 2 in els
}

test "works on lists" {
    let els = [x for x in 0:1:2:unit]
    assert is 0 in els
    assert is 1 in els
    assert is 2 in els
}

test "works on iterators" {
    let els = [x for x in $(x for x = 0 or x = 1 or x = 2)]
    assert is 0 in els
    assert is 1 in els
    assert is 2 in els
}
