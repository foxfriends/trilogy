test "array can be indexed with numbers" {
    assert ['a, 'b, 'c] . 2 == 'c
    assert ['a, 'b, 'c] . 0 == 'a
}

test not "out of bounds access is an error" {
    ['a, 'b, 'c] . 3
}

test not "non-number accessor is an error" {
    ['a, 'b, 'c] . "a"
}

test not "non-integer accessor is an error" {
    ['a, 'b, 'c] . 1.5
}

test "spread into array" {
    let abc = ['a, 'b, 'c]
    assert [..abc] == ['a, 'b, 'c]
    assert [..abc] !== abc
    assert [..abc, ..abc] == ['a, 'b, 'c, 'a, 'b, 'c]
    assert [1, 2, ..abc, 3, 4] !== [1, 2, 'a, 'b, 'c, 3, 4]
}

test "array patterns" {
    let ['a, 'b, 'c] = ['a, 'b, 'c]
    let [a, 'b, c] = ['a, 'b, 'c]
    assert a == 'a
    assert c == 'c

    let ['a, ..mid, 'c] = ['a, 'b, 'b, 'c]
    assert mid == ['b, 'b]

    let ['a, ..xs] = ['a, 'b, 'c]
    assert xs == ['b, 'c]

    let [..xs, 'c] = ['a, 'b, 'c]
    assert xs == ['a, 'b]

    let [..xs, 'c] = ['c]
    assert xs == []

    let abc = ['a, 'b, 'c]
    let [..xs] = abc
    assert abc == xs
    assert abc !== xs

    assert is not ['c] = ['a]
    assert is not ['c] = []
    assert is not [] = ['c]
    assert is not ['a, _, 'c] = ['a, 'a]
    assert is not ['b, .._] = ['a]
}

test "assign into array" {
    let x = []
    x.0 = 1
    x.1 = 2
    assert x == [1, 2]

    x.4 = 3
    assert x == [1, 2, unit, unit, 3]

    x.0 = 0
    assert x == [0, 2, unit, unit, 3]
}

test not "non-number assignment is an error" {
    ['a, 'b, 'c] . "a" = 5
}

test not "non-integer assignment is an error" {
    ['a, 'b, 'c] . 1.5 = 5
}
